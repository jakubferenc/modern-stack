version: '1.0'
networks:
  client-side: {}
  server-side: {}
services:
  # These are the configurations for our Node app
  # When Docker Compose starts this container it will automatically
  # use the Dockerfile in the directory to configure it
  app:
    build: .
    depends_on:
      # Our app does not work without our database
      # so this ensures our database is loaded first
      - postgres
    env_file:
      # This loads our environment variables from the .env file
      # into the container
      - .env
    ports:
      - '9000:9000'
    volumes:
      # Maps our current project directory `.` to
      # our working directory in the container
      - ./:/usr/src/app/
      # node_modules workaround for volumes
      # https://stackoverflow.com/a/32785014
      - /usr/src/app/node_modules
    networks:
      - client-side
      - server-side
  # This is the configuration for our PostgreSQL database container
  # Note the `postgres` name is important, in out Node app when we refer
  # to  `host: "postgres"` that value is mapped on the network to the
  # address of this container.
  postgres:
    image: postgres:14
    restart: always
    env_file:
      # This loads our environment variables from the .env file
      # into the container
      - .env
    ports:
      # Standard port for PostgreSQL databases
      - '5432:5432'
    volumes:
      # The `volumes` tag allows us to share a folder with our container.
      # Its syntax is as follows: [folder path on our machine]:[folder path to retrieve in the container]

      # When the PostgresSQL container is started it will run any scripts
      # provided in the `docker-entrypoint-initdb.d` directory, this connects
      # our seed file to that directory so that it gets run
      - ./db/create-database.sql:/docker-entrypoint-initdb.d/create-database.sql
      - ./db/fill-tables.sql:/docker-entrypoint-initdb.d/fill-tables.sql
      - ./db-data:/var/lib/postgresql/data
    networks:
      - server-side
  # PostgreSQL pgAdmin panel accessible at http://localhost:16543/
  pgadmin-compose:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: 'admin@example.com'
      PGADMIN_DEFAULT_PASSWORD: 'fakepassword123!'
    ports:
      - '8888:80'
    depends_on:
      - postgres
    networks:
      - server-side
